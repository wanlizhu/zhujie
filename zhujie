#!/bin/bash
NVIDIA_BIN_URL="https://github.com/wanlizhu/NVIDIA_BIN.git"

function user-cancel() {
    echo ""
    popd > /dev/null
    exit 0
}

function nvidia-packages-init() { 
    # Git
    sudo apt install git -y
    sudo apt install gh -y # Use `gh auth login` to store GitHub credential locally
    sudo git config --global user.email wanlizhu@hotmail.com
    sudo git config --global user.name "Wanli Zhu"
    gh auth login
    
    # GNOME
    gsettings set org.gnome.desktop.screensaver lock-enabled false
    gsettings set org.gnome.desktop.screensaver lock-delay 0
    gsettings set org.gnome.desktop.screensaver ubuntu-lock-on-suspend false

    # Linux Perf
    sudo apt install linux-tools-generic -y
    sudo apt install linux-cloud-tools-generic -y
    sudo apt install linux-tools-`uname -r` -y
    sudo apt install linux-cloud-tools-`uname -r` -y

    if [ "$(cat /proc/sys/kernel/perf_event_paranoid)" != "-1" ]; then
        sudo sh -c "echo -1 > /proc/sys/kernel/perf_event_paranoid"
        sudo echo "kernel.perf_event_paranoid = -1" >> /etc/sysctl.conf
    fi
    
    # Tools
    sudo apt install openssh-server -y
    sudo apt install build-essential -y
    sudo apt install cmake -y
    sudo apt install sshfs -y
    sudo apt install vim -y
    sudo apt install net-tools -y
    sudo apt install pkg-config -y
    sudo apt install libglvnd-dev -y
    sudo apt install openconnect -y
    sudo apt install steam -y
    sudo apt install libncurses-dev bison flex libssl-dev libelf-dev 
    sudo apt install screen -y
    sudo apt install mailutils -y
    
    # Run sudo without password
    sudo bash -c "echo \"$USER ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers"
    
    # Mesa
    python3 -m pip install mako
    sudo python3 -m pip install mako
    sudo apt install -y llvm wayland-protocols libwayland-egl-backend-dev libxcb-glx0 libxcb-glx0-dev libxcb-shm0 libxcb-shm0-dev libx11-xcb-dev libx11-xcb1 libxcb-dri2-0 libxcb-dri2-0-dev libxcb-dri3-0 libxcb-dri3-dev libxcb-present-dev libxcb-present0 librust-wayland-scanner-dev wayland-scanner++ libvdpau-dev libomxil-bellagio-dev libva-dev libdrm-dev libxext-dev libxfixes-dev libxshmfence-dev libxxf86vm-dev libxrandr-dev

    # P4V
    sudo apt install -y libxkbcommon-x11-dev   
    
    # Steam
    python3 -m pip install steamctl
    
    # Simu mouse and key actions
    sudo apt install -y xdotool

    # Zero Tier
    curl -s https://install.zerotier.com | sudo bash
    sudo systemctl enable zerotier-one.service
    sudo zerotier-cli join db64858fed3b37c1

    # CPolar
    curl -L https://www.cpolar.com/static/downloads/install-release-cpolar.sh | sudo bash
    cpolar authtoken NjgyZGY0N2UtY2Q0NS00NjExLWJmMTItNDU2OTNkNmY3YWQ5
    sudo systemctl enable cpolar
    sudo systemctl start cpolar
}

function nvidia-bin-pull() {
    if [ ! -d "$HOME/NVIDIA/bin" ]; then
        echo "Error: $HOME/NVIDIA/bin is missing"
        exit 1
    fi
    
    pushd "$HOME/NVIDIA/bin" > /dev/null
    git pull $NVIDIA_BIN_URL master
    popd > /dev/null 
}

function nvidia-bin-push() {
    if [ ! -d "$HOME/NVIDIA/bin" ]; then
        echo "Error: $HOME/NVIDIA/bin is missing"
        exit 1
    fi
    
    pushd "$HOME/NVIDIA/bin" > /dev/null
    du -sh * | sort -rh
    echo ""

    trap user-cancel INT
    read -r -n 1 -p "Press [ENTER] to continue or CTRL-C to cancel: "
    echo ""
    
    git add .
    git commit -m "$(date)"
    git push --set-upstream $NVIDIA_BIN_URL master
    popd > /dev/null
}

if [ -z "$1" ]; then
    echo "Usage: zhujie [init] [pull] [push]"
    exit 1
fi

while [ -n "$1" ]; do
    case "$1" in
        init)
            nvidia-packages-init
        ;;
        
        pull)
            nvidia-bin-pull
        ;;
        
        push)
            nvidia-bin-push
        ;;
        
        *)
	    zhujie
	    exit 1
        ;;
    esac
    shift
done
    
